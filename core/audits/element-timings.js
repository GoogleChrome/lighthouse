/**
 * @license
 * Copyright 2025 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */

import {Audit} from './audit.js';
import * as i18n from '../lib/i18n/i18n.js';
// import {ElementTimings as ComputedElementTimings} from '../computed/element-timings.js';

const UIStrings = {
  /** Title of a Lighthouse audit that provides details on any timestamps generated by the page. Element Timing refers to the 'Element Timing API', which contain render timing information for image and text node elements the developer annotated with an elementtiming attribute for observation*/
  title: 'Element Timing',
  /** Description of a Lighthouse audit that tells the user they may want to use the Element Timing API to help measure the performance of aspects of their page load and interaction. This is displayed after a user expands the section to see more. No character length limits. The last sentence starting with 'Learn' becomes link text to additional documentation. */
  description:
    'Consider instrumenting your app with the Element Timing API to measure your ' +
    'app\'s real-world performance during key user experiences. ' +
    '[Learn more about Element Timing API](https://developer.mozilla.org/en-US/docs/Web/API/PerformanceElementTiming).',
  displayValue: `{itemCount, plural,
    =1 {1 element timing}
    other {# element timings}
    }`,
  columnType: 'Type',
  columnRenderTime: 'Render Time',
  columnLoadTime: 'Load Time',
  columnIdentifier: 'Identifier',
};

const str_ = i18n.createIcuMessageFn(import.meta.url, UIStrings);

class ElementTimings extends Audit {
  /**
   * @return {LH.Audit.Meta}
   */
  static get meta() {
    return {
      id: 'element-timings',
      title: str_(UIStrings.title),
      description: str_(UIStrings.description),
      scoreDisplayMode: Audit.SCORING_MODES.INFORMATIVE,
      guidanceLevel: 2,
      requiredArtifacts: ['Trace', 'TraceElements'],
    };
  }
}

export default ElementTimings;
export {UIStrings};
